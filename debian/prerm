#!/bin/sh
# prerm script for powerpc-wrs-vxworks-wrs-ip
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

PREFIX="/usr"
WIND_BASE="$PREFIX/powerpc-wrs-vxworks/wind_base"
TOOL_DIR="$PREFIX/powerpc-wrs-vxworks"
TMP_DIR=`mktemp -t -d wrs-headers-installer.XXXXXXXXXX` || exit 1
CONF_DIR="$PREFIX/share/wrs-headers"
LDSCRIPT_DIR="$TOOL_DIR/share/ldscripts"
FILES="$CONF_DIR/files"
MD5SUMS="$CONF_DIR/md5sums"
CUR_DIR=`pwd`

case "$1" in
    remove|upgrade|deconfigure)
        #remove all the files we kept track of
	while read line ; do
            if [ -f "$line" ] ; then
                if grep "$line" $MD5SUMS | md5sum -c > /dev/null 2>&1 ; then
                    #md5 checks, so the file has not been changed
                    rm -f "$line"
                fi
            else
                #symlinks and the like
	        rm -f "$line"
            fi
        done < $FILES
        rm $FILES
        rm $MD5SUMS
        rmdir $CONF_DIR > /dev/null 2>&1 || true #remove if empty
        #remove empty directories
        find $TOOL_DIR -type d -empty -delete
        rmdir $TOOL_DIR > /dev/null 2>&1 || true #remove if empty
        #remove ldscript
        rm $LDSCRIPT_DIR/dkm.ld || true
        rmdir $LDSCRIPT_DIR > /dev/null 2>&1 || true #remove if empty

    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
